Area_x <- "West Sussex"
Age_x <- "All Ages"
library(easypackages)
libraries(c("readxl", "readr", "plyr", "dplyr", "ggplot2", "png", "tidyverse", "reshape2", "scales", "viridis", "rgdal", "officer", "flextable", "tmaptools", "lemon", "fingertipsR", "PHEindicatormethods"))
stack_theme = function(){
theme(
axis.text.y = element_text(colour = "#000000", size = 9),
axis.text.x = element_text(colour = "#000000", angle = 0, hjust = 1, vjust = .5, size = 8),
axis.title =  element_text(colour = "#000000", size = 9, face = "bold"),
plot.title = element_text(colour = "#000000", face = "bold", size = 10),
plot.subtitle = element_text(colour = "#000000", size = 9),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(fill = "#FFFFFF"),
panel.grid.major.y = element_line(colour = "#E7E7E7", size = .3),
panel.grid.minor.y = element_blank(),
strip.text = element_text(colour = "#000000", size = 10, face = "bold"),
strip.background = element_blank(),
axis.ticks = element_line(colour = "#E7E7E7"),
legend.position = "bottom",
legend.title = element_text(colour = "#000000", size = 10, face = "bold"),
legend.background = element_rect(fill = "#ffffff"),
legend.key = element_rect(fill = "#ffffff", colour = "#ffffff"),
legend.text = element_text(colour = "#000000", size = 9),
axis.line = element_line(colour = "#dbdbdb")
)
}
slope_theme = function(){
theme(axis.text = element_blank(),
plot.title = element_text(colour = "#000000", face = "bold", size = 10),
plot.subtitle = element_text(colour = "#000000", size = 9),
strip.text = element_text(colour = "#000000", size = 10, face = "bold"),
plot.margin = unit(c(0,2,0,0), "cm"),
# legend.position = c(.75,-.1),
legend.position = "top",
legend.title = element_text(colour = "#000000", size = 10, face = "bold"),
legend.background = element_blank(),
legend.key = element_rect(fill = "#ffffff", colour = "#ffffff"),
legend.text = element_text(colour = "#000000", size = 8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
strip.background = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank()
)}
if(!(file.exists("~/GBD/Area_lookup_table.csv") & file.exists("~/GBD/Area_types_table.csv"))){
LAD <- read_csv(url("https://opendata.arcgis.com/datasets/a267b55f601a4319a9955b0197e3cb81_0.csv"), col_types = cols(LAD17CD = col_character(),LAD17NM = col_character(),  LAD17NMW = col_character(),  FID = col_integer()))
Counties <- read_csv(url("https://opendata.arcgis.com/datasets/7e6bfb3858454ba79f5ab3c7b9162ee7_0.csv"), col_types = cols(CTY17CD = col_character(),  CTY17NM = col_character(),  Column2 = col_character(),  Column3 = col_character(),  FID = col_integer()))
lookup <- read_csv(url("https://opendata.arcgis.com/datasets/41828627a5ae4f65961b0e741258d210_0.csv"), col_types = cols(LTLA17CD = col_character(),  LTLA17NM = col_character(),  UTLA17CD = col_character(),  UTLA17NM = col_character(),  FID = col_integer()))
# This is a lower tier LA to upper tier LA lookup
UA <- subset(lookup, LTLA17NM == UTLA17NM)
CCG <- read_csv(url("https://opendata.arcgis.com/datasets/4010cd6fc6ce42c29581c4654618e294_0.csv"), col_types = cols(CCG18CD = col_character(),CCG18CDH = col_skip(),CCG18NM = col_character(), FID = col_skip())) %>%
rename(Area_Name = CCG18NM,
Area_Code = CCG18CD) %>%
mutate(Area_Type = "Clinical Commissioning Group (2018)")
Region <- read_csv(url("https://opendata.arcgis.com/datasets/cec20f3a9a644a0fb40fbf0c70c3be5c_0.csv"), col_types = cols(RGN17CD = col_character(),  RGN17NM = col_character(),  RGN17NMW = col_character(),  FID = col_integer()))
colnames(Region) <- c("Area_Code", "Area_Name", "Area_Name_Welsh", "FID")
Region$Area_Type <- "Region"
Region <- Region[c("Area_Code", "Area_Name", "Area_Type")]
LAD <- subset(LAD, substr(LAD$LAD17CD, 1, 1) == "E")
LAD$Area_Type <- ifelse(LAD$LAD17NM %in% UA$LTLA17NM, "Unitary Authority", "District")
colnames(LAD) <- c("Area_Code", "Area_Name", "Area_Name_Welsh", "FID", "Area_Type")
LAD <- LAD[c("Area_Code", "Area_Name", "Area_Type")]
Counties$Area_type <- "County"
colnames(Counties) <- c("Area_Code", "Area_Name", "Col2", "Col3", "FID", "Area_Type")
Counties <- Counties[c("Area_Code", "Area_Name", "Area_Type")]
England <- data.frame(Area_Code = "E92000001", Area_Name = "England", Area_Type = "Country")
Areas <- rbind(LAD, CCG, Counties, Region, England)
rm(LAD, CCG, Counties, Region, England, UA)
write.csv(lookup, "~/GBD/Area_lookup_table.csv", row.names = FALSE)
write.csv(Areas, "~/GBD/Area_types_table.csv", row.names = FALSE)
}
library(easypackages)
libraries(c("readxl", "readr", "plyr", "dplyr", "ggplot2", "png", "tidyverse", "reshape2", "scales", "viridis", "rgdal", "officer", "flextable", "tmaptools", "lemon", "fingertipsR", "PHEindicatormethods"))
install.packages('flextable')
install.packages('officer')
libraries(c("readxl", "readr", "plyr", "dplyr", "ggplot2", "png", "tidyverse", "reshape2", "scales", "viridis", "rgdal", "officer", "flextable", "tmaptools", "lemon", "fingertipsR", "PHEindicatormethods"))
stack_theme = function(){
theme(
axis.text.y = element_text(colour = "#000000", size = 9),
axis.text.x = element_text(colour = "#000000", angle = 0, hjust = 1, vjust = .5, size = 8),
axis.title =  element_text(colour = "#000000", size = 9, face = "bold"),
plot.title = element_text(colour = "#000000", face = "bold", size = 10),
plot.subtitle = element_text(colour = "#000000", size = 9),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(fill = "#FFFFFF"),
panel.grid.major.y = element_line(colour = "#E7E7E7", size = .3),
panel.grid.minor.y = element_blank(),
strip.text = element_text(colour = "#000000", size = 10, face = "bold"),
strip.background = element_blank(),
axis.ticks = element_line(colour = "#E7E7E7"),
legend.position = "bottom",
legend.title = element_text(colour = "#000000", size = 10, face = "bold"),
legend.background = element_rect(fill = "#ffffff"),
legend.key = element_rect(fill = "#ffffff", colour = "#ffffff"),
legend.text = element_text(colour = "#000000", size = 9),
axis.line = element_line(colour = "#dbdbdb")
)
}
slope_theme = function(){
theme(axis.text = element_blank(),
plot.title = element_text(colour = "#000000", face = "bold", size = 10),
plot.subtitle = element_text(colour = "#000000", size = 9),
strip.text = element_text(colour = "#000000", size = 10, face = "bold"),
plot.margin = unit(c(0,2,0,0), "cm"),
# legend.position = c(.75,-.1),
legend.position = "top",
legend.title = element_text(colour = "#000000", size = 10, face = "bold"),
legend.background = element_blank(),
legend.key = element_rect(fill = "#ffffff", colour = "#ffffff"),
legend.text = element_text(colour = "#000000", size = 8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
strip.background = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank()
)}
getwd()
if(!(file.exists("./Area_lookup_table.csv") & file.exists("./Area_types_table.csv"))){
LAD <- read_csv(url("https://opendata.arcgis.com/datasets/a267b55f601a4319a9955b0197e3cb81_0.csv"), col_types = cols(LAD17CD = col_character(),LAD17NM = col_character(),  LAD17NMW = col_character(),  FID = col_integer()))
Counties <- read_csv(url("https://opendata.arcgis.com/datasets/7e6bfb3858454ba79f5ab3c7b9162ee7_0.csv"), col_types = cols(CTY17CD = col_character(),  CTY17NM = col_character(),  Column2 = col_character(),  Column3 = col_character(),  FID = col_integer()))
lookup <- read_csv(url("https://opendata.arcgis.com/datasets/41828627a5ae4f65961b0e741258d210_0.csv"), col_types = cols(LTLA17CD = col_character(),  LTLA17NM = col_character(),  UTLA17CD = col_character(),  UTLA17NM = col_character(),  FID = col_integer()))
# This is a lower tier LA to upper tier LA lookup
UA <- subset(lookup, LTLA17NM == UTLA17NM)
CCG <- read_csv(url("https://opendata.arcgis.com/datasets/4010cd6fc6ce42c29581c4654618e294_0.csv"), col_types = cols(CCG18CD = col_character(),CCG18CDH = col_skip(),CCG18NM = col_character(), FID = col_skip())) %>%
rename(Area_Name = CCG18NM,
Area_Code = CCG18CD) %>%
mutate(Area_Type = "Clinical Commissioning Group (2018)")
Region <- read_csv(url("https://opendata.arcgis.com/datasets/cec20f3a9a644a0fb40fbf0c70c3be5c_0.csv"), col_types = cols(RGN17CD = col_character(),  RGN17NM = col_character(),  RGN17NMW = col_character(),  FID = col_integer()))
colnames(Region) <- c("Area_Code", "Area_Name", "Area_Name_Welsh", "FID")
Region$Area_Type <- "Region"
Region <- Region[c("Area_Code", "Area_Name", "Area_Type")]
LAD <- subset(LAD, substr(LAD$LAD17CD, 1, 1) == "E")
LAD$Area_Type <- ifelse(LAD$LAD17NM %in% UA$LTLA17NM, "Unitary Authority", "District")
colnames(LAD) <- c("Area_Code", "Area_Name", "Area_Name_Welsh", "FID", "Area_Type")
LAD <- LAD[c("Area_Code", "Area_Name", "Area_Type")]
Counties$Area_type <- "County"
colnames(Counties) <- c("Area_Code", "Area_Name", "Col2", "Col3", "FID", "Area_Type")
Counties <- Counties[c("Area_Code", "Area_Name", "Area_Type")]
England <- data.frame(Area_Code = "E92000001", Area_Name = "England", Area_Type = "Country")
Areas <- rbind(LAD, CCG, Counties, Region, England)
rm(LAD, CCG, Counties, Region, England, UA)
write.csv(lookup, "./Area_lookup_table.csv", row.names = FALSE)
write.csv(Areas, "./Area_types_table.csv", row.names = FALSE)
}
